////////////////////////////////////////////////////////////////////////////////
#include <iostream>
#include <string>
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
class Data
{
public:
    Data() : m_id(++s_id) { std::cout << "Data object created:" << m_id << std::endl; }
    virtual ~Data() { std::cout << "Data object destroyed:" << m_id << std::endl; }

private:
    int m_id;
    static int s_id;
};

int Data::s_id = 0;
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
class SaveData
{
public:
    SaveData() {}
    virtual ~SaveData() { if (nullptr != s_saveData) { delete s_saveData; s_saveData = nullptr; } }

    void SetData(Data* data)
    {
        if (nullptr != s_saveData) { delete s_saveData; s_saveData = nullptr; }; s_saveData = data;
    }
    Data* GetData() { return s_saveData; }

private:
    static Data* s_saveData;
};

Data* SaveData::s_saveData = nullptr;
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
int main()
{
    SaveData saveData;

    saveData.SetData(new Data());
    saveData.SetData(new Data());
    saveData.SetData(new Data());
}
////////////////////////////////////////////////////////////////////////////////
